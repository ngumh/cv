{"version":3,"sources":["components/structure/Header.js","components/elements/Badge.js","components/elements/SocialMedia.js","components/sections/AboutMe.js","components/elements/ProgressBar.js","components/elements/SkillsList.js","components/sections/Skills.js","components/elements/ItemTimeline.js","components/elements/Timeline.js","components/sections/Experience.js","components/elements/Language.js","components/sections/ForeignLang.js","components/structure/Content.js","components/structure/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Hero","lazy","Header","override","css","id","fallback","color","className","Badge","props","faIcon","text","SocialMedia","href","url","target","title","AboutMe","Resume","basics","x_title","style","marginBottom","src","picture","alt","name","profiles","map","value","index","key","socialmedia","urlSocialMedia","x_icon","summary","interests","ProgressBar","percentage","max","SkillsList","skills","progressBars","counter","Object","entries","forEach","push","buildSkills","Skills","filter","skill","keywords","includes","reduce","obj","item","level","TimelineItem","date","position","company","maxWidth","Timeline","Date","getFullYear","work","startDate","year","content","toLocaleString","month","Experience","Language","lang","fluency","ielts","ForeignLanguage","languages","language","Content","ForeignLang","Footer","App","React","useState","isLoading","setisLoading","useEffect","setTimeout","size","loading","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88b83c06.chunk.js","sourcesContent":["import React, {Suspense,lazy} from \"react\"\r\nimport { RingLoader } from \"react-spinners\";\r\nimport { css } from \"@emotion/core\";\r\nconst Hero = lazy(() => import(\"../elements/Hero\"))\r\n\r\nfunction Header() {\r\n    const override = css`\r\n        display: block;\r\n        margin: 0 auto;\r\n        border-color: red;\r\n    `;\r\n    return(\r\n        <header id=\"header\">\r\n            <Suspense fallback={\r\n            <div><RingLoader \r\n                css={override}\r\n                color={\"#e4d00a\"}\r\n            />\r\n            <p className=\"has-text-centered is-italic is-family-primary\">Please Wait...!</p>\r\n            \r\n            </div>}>\r\n                <Hero />\r\n            </Suspense>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\n\r\nfunction Badge(props) {\r\n    const faIcon = \"fas fa-1x \" + props.faIcon\r\n    return(\r\n        <div className=\"control\">\r\n            <div className=\"tags has-addons\">\r\n                <span className=\"tag is-dark\">{props.text}</span>\r\n                <span className=\"tag is-success\">\r\n                    <i className={faIcon}></i>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Badge","import React from \"react\"\r\n\r\nfunction SocialMedia(props) {\r\n    const faIcon = \"fas fa-1x \" + props.faIcon\r\n    return(\r\n        <div className=\"control\">\r\n             <a href={props.url} target=\"blank\" className=\"is-hovered\" title={props.text}>\r\n                <div className=\"tags has-addons\">\r\n                    <span className=\"tag is-dark\">{props.text}</span>\r\n                    <span className=\"tag\">\r\n                        <i className={faIcon}></i>\r\n                    </span>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialMedia\r\n\r\n","import React from \"react\";\r\nimport Badge from \"../elements/Badge\";\r\nimport SocialMedia from \"../elements/SocialMedia\";\r\nimport Resume from \"../../resume.json\";\r\n\r\nfunction AboutMe() {\r\n  return (\r\n    <section className=\"section has-background-black-ter\" id=\"aboutMe\">\r\n      <div className=\"container has-text-centered\">\r\n        <p className=\"subtitle is-4 has-text-white has-text-weight-bold\">\r\n          {Resume.basics.x_title}\r\n        </p>\r\n        <figure className=\"image container is-128x128\" style={{marginBottom: \"10px\"}}>\r\n          <img\r\n            src={Resume.basics.picture}\r\n            alt={Resume.basics.name}\r\n            className=\"is-rounded\"\r\n          />\r\n        </figure>\r\n        <div className=\"container interests\">\r\n          <div className=\"field is-grouped is-grouped-multiline has-text-centered socialMedia\">\r\n              {Resume.basics.profiles.map((value, index) => {\r\n              return <SocialMedia  key={index} text={value.socialmedia} url={value.urlSocialMedia} faIcon={value.x_icon} />\r\n              })}\r\n          </div>\r\n        </div>\r\n        <p className=\"subtitle is-5 has-text-white has-text-weight-light summary-text\">\r\n          {Resume.basics.summary}\r\n        </p>\r\n        <div className=\"container interests\">\r\n          <div className=\"field is-grouped is-grouped-multiline has-text-centered\">\r\n              {Resume.interests.map((value, index) => {\r\n                return <Badge key={index} text={value.name} faIcon={value.x_icon} />\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AboutMe;\r\n","import React from \"react\"\r\n\r\nfunction ProgressBar(props) {\r\n    return(\r\n        <div>\r\n            <span className=\"title is-5 has-text-white\">{props.text}</span>\r\n            <span className=\"subtitle is-6 has-text-white skill-percentage\">{props.percentage}%</span>\r\n            <progress className=\"progress is-success\" value={props.percentage} max=\"100\">{props.percentage}%</progress>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar","import React from \"react\"\r\nimport ProgressBar from \"./ProgressBar\"\r\n\r\nfunction SkillsList(props) {\r\n    const skills = props.skills\r\n    return (\r\n        <ul className=\"skill-list\">\r\n            {buildSkills(skills)}\r\n        </ul>\r\n    )\r\n}\r\nfunction buildSkills(skills){\r\n    let progressBars = []\r\n    let counter = 0\r\n    Object.entries(skills).forEach(([key, value]) => {\r\n        progressBars.push(<li key={counter}>\r\n            <ProgressBar\r\n                key={counter}\r\n                text={key}\r\n                percentage={value}\r\n            />\r\n        </li>)\r\n        counter++\r\n    })\r\n    return progressBars\r\n}\r\n\r\nexport default SkillsList","import React from \"react\"\r\nimport SkillsList from \"../elements/SkillsList\"\r\nimport Resume from \"../../resume.json\"\r\n\r\nfunction Skills() {\r\n    return(\r\n        <section className=\"section has-background-dark\" id=\"skills\">\r\n            <div className=\"container\">\r\n                <h1 className=\"title has-text-white\">Skills</h1>\r\n                <div className=\"columns\">\r\n                    <div className=\"column is-6\">\r\n                        <div className=\"has-text-centered\">\r\n                            <span className=\"icon has-text-white\">\r\n                                <i className=\"fas fa-3x fa-code\"></i>\r\n                            </span>\r\n                            <h2 className=\"title is-5 has-text-white\">Front End</h2>\r\n                        </div>\r\n                        <SkillsList skills = {\r\n                            Resume.skills.filter(skill => skill.keywords.includes('Front End')).reduce((obj,item) => ((obj[item.name] = item.level, obj)),{})\r\n                        } />\r\n                    </div>\r\n                    <div className=\"column is-6\">\r\n                        <div className=\"has-text-centered\">\r\n                            <span className=\"icon has-text-white\">\r\n                                <i className=\"fas fa-3x fa-laptop-code\"></i>\r\n                            </span>\r\n                            <h2 className=\"title is-5 has-text-white\">Back End</h2>\r\n                        </div>\r\n                        <SkillsList skills = {\r\n                            Resume.skills.filter(skill => skill.keywords.includes('Back End')).reduce((obj,item) => ((obj[item.name] = item.level, obj)),{})\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Skills","import React from \"react\";\r\n\r\nfunction TimelineItem(props) {\r\n  return (\r\n    <div className=\"timeline-item is-success\">\r\n      <div className=\"timeline-marker is-image is-32x32\">\r\n        <img src=\"\" alt=\"\" />\r\n      </div>\r\n      <div className=\"timeline-content\">\r\n        <p className=\"heading\">{props.date}</p>\r\n        <p className=\"heading\">{props.position}</p>\r\n        <h1 className=\"title is-4 has-text-white\">{props.company}</h1>\r\n        <p style={{maxWidth: '25em'}}>{props.summary}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimelineItem","import React from \"react\"\r\nimport TimelineItem from \"./ItemTimeline\"\r\nimport Resume from \"../../resume.json\"\r\n\r\nfunction Timeline() {\r\n    return(\r\n        <div className=\"timeline is-centered\">\r\n            <header className=\"timeline-header\">\r\n                <span className=\"tag is-medium is-dark\">{new Date().getFullYear()}</span>\r\n            </header>\r\n            <div className=\"timeline-item\">\r\n                <div className=\"timeline-marker is-success\"></div>\r\n                <div className=\"timeline-content\"></div>\r\n            </div>\r\n            {\r\n                Resume.work.map((item) => {return new Date(item.startDate).getFullYear()}).map((year, index) => {\r\n                    let content = []\r\n                    content.push(<header key={index} className=\"timeline-header\">\r\n                                    <span className=\"tag is-success\">{year}</span>\r\n                                   </header>)\r\n                    content.push(Resume.work.filter(work => new Date(work.startDate).getFullYear() === year).map((item, index) => {\r\n                            return <TimelineItem \r\n                                        key = {index}\r\n                                        date = {new Date(item.startDate).toLocaleString('en-UK', {month:'long', year: 'numeric'})}\r\n                                        position={item.position}\r\n                                        company = {item.company}\r\n                                        summary = {item.summary}\r\n                                    />\r\n                        }))\r\n                    return content\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timeline","import React from \"react\"\r\nimport Timeline from \"../elements/Timeline\"\r\n\r\nfunction Experience() {\r\n    return(\r\n        <section className=\"section has-background-grey-dark\" id=\"experience\">\r\n            <div className=\"container has-text-white\">\r\n                <h1 className=\"title has-text-white\">Experiences</h1>\r\n                <Timeline />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Experience","import React from 'react'\r\n\r\nfunction Language(props) {\r\n    return (\r\n        <li>\r\n            {props.lang} : {props.fluency} <br/>\r\n            {props.ielts ? \"IELTS : \" + props.ielts :''}\r\n            <hr />\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nexport default Language","import React from 'react'\r\nimport Resume from '../../resume.json'\r\nimport Language from '../elements/Language'\r\n\r\nfunction ForeignLanguage() {\r\n    return (\r\n        <section className=\"section has-background-dark\">\r\n            <div className=\"container has-text-white\">\r\n                <h1 className=\"title has-text-white\">Foreign Language</h1>\r\n                <ul>\r\n                    {\r\n                        Resume.languages.map((value,index) => {\r\n                            return <Language key={index} lang= {value.language} fluency={value.fluency} ielts={value.ielts}  />\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ForeignLanguage","import React from \"react\"\r\nimport AboutMe from \"../sections/AboutMe\"\r\nimport Skills from \"../sections/Skills\"\r\nimport Experience from \"../sections/Experience\"\r\nimport ForeignLang from \"../sections/ForeignLang\"\r\n\r\nfunction Content() {\r\n    return(\r\n        <main>\r\n            <AboutMe />\r\n            <Skills />\r\n            <ForeignLang />\r\n            <Experience />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Content","import React from \"react\"\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer has-background-dark\">\r\n            <div className=\"content has-text-centered has-text-white\">\r\n                <i>\r\n                    <sup><i className=\"fas fa-quote-left\"></i></sup>\r\n                        Success is not an accident, success is actually a choice. \r\n                    <sup><i className=\"fas fa-quote-right\"></i></sup>\r\n                    &nbsp; <sub>- &nbsp;Stephen Curry</sub>\r\n                </i>\r\n                <p className=\"has-text-grey-light\">\r\n                    © {new Date().getFullYear()} Mai Hong Ngu\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport Header from \"./components/structure/Header\"\r\nimport Content from \"./components/structure/Content\"\r\nimport Footer from \"./components/structure/Footer\"\r\nimport { css } from \"@emotion/core\";\r\nimport { RingLoader } from \"react-spinners\";\r\nimport './App.css';\r\nimport 'bulma/css/bulma.css'\r\n\r\nfunction App() {\r\n  const [isLoading, setisLoading] = React.useState(true);\r\n  const override = css`\r\n    margin: 0;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  `;\r\n  React.useEffect(() => {\r\n    setTimeout(() => setisLoading(false), 2500);\r\n  });\r\n\r\n  return (\r\n    <div >\r\n      {isLoading ? \r\n          <RingLoader    \r\n          css={override}\r\n          size={\"100px\"}\r\n          color={\"#e4d00a\"}\r\n          loading={setisLoading}\r\n        />\r\n      :\r\n        <div>\r\n          <Header />\r\n          <Content />\r\n          <Footer />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}