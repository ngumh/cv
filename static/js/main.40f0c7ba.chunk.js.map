{"version":3,"sources":["components/elements/MenuItem.js","components/elements/Navbar.js","components/elements/Hero.js","components/structure/Header.js","components/elements/Badge.js","components/sections/AboutMe.js","components/structure/Content.js","App.js","serviceWorker.js","index.js"],"names":["MenuItem","props","href","className","text","NavBar","state","showMenu","handleMenuClick","bind","e","currentState","this","setState","Resume","basics","name","onClick","React","Component","Hero","label","location","region","country","style","paddingBottom","profiles","map","value","index","key","url","target","title","network","x_icon","Header","Badge","faIcon","AboutMe","id","x_title","marginBottom","src","picture","alt","summary","interests","Content","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40f0c7ba.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction MenuItem(props) {\r\n    return(\r\n        <a href={props.href} className=\"navbar-item is-unselectable\">{props.text}</a>\r\n    )\r\n}\r\n\r\nexport default MenuItem","import React from \"react\"\r\nimport MenuItem from \"./MenuItem\"\r\nimport Resume from \"../../resume.json\"\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {showMenu: false};\r\n        this.handleMenuClick = this.handleMenuClick.bind(this);\r\n    }\r\n\r\n    handleMenuClick(e) {\r\n        const currentState = this.state.showMenu;\r\n        this.setState({ showMenu: !currentState});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar is-transparent\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-brand\">\r\n                        <a href=\"/\" className=\"navbar-item title is-3 is-unselectable my-name\">\r\n                            {Resume.basics.name}\r\n                        </a>\r\n                        <span className=\"navbar-burger burger has-text-white\" onClick={this.handleMenuClick}>\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                        </span>\r\n                    </div>\r\n                    <div className={'navbar-menu nav-menu ' + (this.state.showMenu ? 'is-active' : null)}>\r\n                        <div className=\"navbar-end\" onClick={this.handleMenuClick}>\r\n                            <MenuItem\r\n                                text = \"About Me\"\r\n                                href = \"#aboutMe\"\r\n                            />\r\n                            <MenuItem\r\n                                text = \"Skills\"\r\n                                href = \"#skills\"\r\n                            />\r\n                            <MenuItem\r\n                                text = \"Experience\"\r\n                                href = \"#experience\"\r\n                            />\r\n                            <MenuItem\r\n                                text = \"Articles\"\r\n                                href = \"#articles\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }    \r\n}\r\n\r\nexport default NavBar","import React from \"react\"\r\nimport NavBar from \"./Navbar\"\r\nimport Resume from \"../../resume.json\"\r\n\r\nfunction Hero() {\r\n    return (\r\n        <section className=\"hero is-dark is-fullheight has-bg-image\">\r\n            <div className=\"hero-head\">\r\n                <NavBar />\r\n            </div>\r\n            <div className=\"hero-body\">\r\n                <div className=\"container\">\r\n                    <p className=\"subtitle is-5 has-text-weight-light\">I'm a</p>\r\n                    <h1 className=\"title\">{Resume.basics.label}</h1>\r\n                    <h2 className=\"subtitle\">{Resume.basics.location.region}, {Resume.basics.location.country}</h2>\r\n                </div>\r\n            </div>\r\n            <div className=\"hero-foot\" style={{paddingBottom:'20px'}}>\r\n                <div className=\"columns is-mobile\">\r\n                    <div className=\"column is-4\"></div>\r\n                    {\r\n                        Resume.basics.profiles.map((value, index) => {\r\n                            return (\r\n                                <div key={index} className=\"column is-2 has-text-centered\">\r\n                                    <a href={value.url} target=\"blank\" className=\"is-hovered\" title={value.network}>\r\n                                        <span className=\"icon is-medium is-\">\r\n                                            <i className={value.x_icon}></i>\r\n                                        </span>\r\n                                    </a>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    <div className=\"column is-4\"></div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Hero","import React from \"react\"\r\nimport Hero from \"../elements/Hero\"\r\n\r\nfunction Header() {\r\n    return(\r\n        <header>\r\n            <Hero />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\n\r\nfunction Badge(props) {\r\n    const faIcon = \"fas fa-1x \" + props.faIcon\r\n    return(\r\n        <div className=\"control\">\r\n            <div className=\"tags has-addons\">\r\n                <span className=\"tag is-dark\">{props.text}</span>\r\n                <span className=\"tag is-success\">\r\n                    <i className={faIcon}></i>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Badge","import React from \"react\";\r\nimport Badge from \"../elements/Badge\";\r\nimport Resume from \"../../resume.json\";\r\n\r\nfunction AboutMe() {\r\n  return (\r\n    <section className=\"section has-background-black-ter\" id=\"aboutMe\">\r\n      <div className=\"container has-text-centered\">\r\n        <p className=\"subtitle is-4 has-text-white has-text-weight-bold\">\r\n          {Resume.basics.x_title}\r\n        </p>\r\n        <figure className=\"image container is-128x128\" style={{marginBottom: \"10px\"}}>\r\n          <img\r\n            src={Resume.basics.picture}\r\n            alt={Resume.basics.name}\r\n            className=\"is-rounded\"\r\n          />\r\n        </figure>\r\n        <p className=\"subtitle is-5 has-text-white has-text-weight-light summary-text\">\r\n          {Resume.basics.summary}\r\n        </p>\r\n        <div className=\"container interests\">\r\n          <div className=\"field is-grouped is-grouped-multiline has-text-centered\">\r\n              {Resume.interests.map((value, index) => {\r\n                return <Badge key={index} text={value.name} faIcon={value.x_icon} />\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AboutMe;\r\n","import React from \"react\"\r\nimport AboutMe from \"../sections/AboutMe\"\r\n\r\nfunction Content() {\r\n    return(\r\n        <main>\r\n            <AboutMe />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Content","import React from 'react';\nimport Header from \"./components/structure/Header\"\nimport Content from \"./components/structure/Content\"\n\nimport './App.css';\nimport 'bulma/css/bulma.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}